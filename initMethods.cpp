#include "initMethods.hpp"
#include "Dialogs.hpp"
#include "ASCImages.hpp"
#include <string>
#include <cctype>
#include <vector>

short HuntingKingGame::numberOfInimethods = 2;

// Font Name: Delta
void HuntingKingGame::printInitGame(int spaceBetween) {

std::cout << "__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\______________/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_______/\\\\\\\\\\_______/\\\\\\\\\\\\\\\\\\\\\\\\\\___          " <<std::endl;
std::cout << " _\\///////\\\\\\/////____/\\\\\\\\\\\\\\\\\\\\\\\\\\__\\/\\\\\\/////////\\\\\\_\\/\\\\\\_____________\\/\\\\\\///////////__\\///////\\\\\\/////______/\\\\\\///\\\\\\____\\/\\\\\\/////////\\\\\\_         " <<std::endl;
std::cout << "  _______\\/\\\\\\________/\\\\\\/////////\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_____________\\/\\\\\\___________________\\/\\\\\\_________/\\\\\\/__\\///\\\\\\__\\/\\\\\\_______\\/\\\\\\_        " <<std::endl;
std::cout << "   _______\\/\\\\\\_______\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\__\\/\\\\\\_____________\\/\\\\\\\\\\\\\\\\\\\\\\___________\\/\\\\\\________/\\\\\\______\\//\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/__       " <<std::endl;
std::cout << "    _______\\/\\\\\\_______\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\/////////\\\\\\_\\/\\\\\\_____________\\/\\\\\\///////____________\\/\\\\\\_______\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\/////////____      " <<std::endl;
std::cout << "     _______\\/\\\\\\_______\\/\\\\\\/////////\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_____________\\/\\\\\\___________________\\/\\\\\\_______\\//\\\\\\______/\\\\\\__\\/\\\\\\_____________     " <<std::endl;
std::cout << "      _______\\/\\\\\\_______\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_____________\\/\\\\\\___________________\\/\\\\\\________\\///\\\\\\__/\\\\\\____\\/\\\\\\_____________    " <<std::endl;
std::cout << "       _______\\/\\\\\\_______\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/__\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_______\\/\\\\\\__________\\///\\\\\\\\\\/_____\\/\\\\\\_____________   " <<std::endl;
std::cout << "        _______\\///________\\///________\\///__\\/////////////____\\///////////////__\\///////////////________\\///_____________\\/////_______\\///______________  " <<std::endl;
std::cout << " ______________________________________________________/\\\\\\\\\\\\\\\\\\______/\\\\\\\\\\\\\\\\\\\\\\\\\\_______/\\\\\\\\\\\\\\\\\\\\\\\\_________________________________________         " <<std::endl;
std::cout << "  ____________________________________________________/\\\\\\///////\\\\\\___\\/\\\\\\/////////\\\\\\___/\\\\\\//////////__________________________________________        " <<std::endl;
std::cout << "   ___________________________________________________\\/\\\\\\_____\\/\\\\\\___\\/\\\\\\_______\\/\\\\\\__/\\\\\\_____________________________________________________       " <<std::endl;
std::cout << "    ___________________________________________________\\/\\\\\\\\\\\\\\\\\\\\\\/____\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/__\\/\\\\\\____/\\\\\\\\\\\\\\_________________________________________      " <<std::endl;
std::cout << "     ___________________________________________________\\/\\\\\\//////\\\\\\____\\/\\\\\\/////////____\\/\\\\\\___\\/////\\\\\\_________________________________________     " <<std::endl;
std::cout << "      ___________________________________________________\\/\\\\\\____\\//\\\\\\___\\/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\_________________________________________    " <<std::endl;
std::cout << "       ___________________________________________________\\/\\\\\\_____\\//\\\\\\__\\/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\_________________________________________   " <<std::endl;
std::cout << "        ___________________________________________________\\/\\\\\\______\\//\\\\\\_\\/\\\\\\_____________\\//\\\\\\\\\\\\\\\\\\\\\\\\/__________________________________________  " <<std::endl;
std::cout << "         ___________________________________________________\\///________\\///__\\///_______________\\////////////____________________________________________" <<std::endl;

    for (int idx = 0; idx < spaceBetween; idx++) {
        std::cout << std::endl;
    }

};

// Font Name: Fraktur
void HuntingKingGame::printGamesName() {
                                                                                                                                
std::cout << "                             # ###                                                ##            #####    ##                                            " << std::endl;
std::cout << "                           /  /###  /                                              ##        ######  /  #### /                                         " << std::endl;
std::cout << "                          /  /  ###/                                               ##       /#   /  /   ####/                            #             " << std::endl;
std::cout << "                         /  ##   ##                    ##                          ##      /    /  /    # #                             ##             " << std::endl;
std::cout << "                        /  ###                         ##                          ##          /  /     #                               ##             " << std::endl;
std::cout << "                       ##   ##     ###  /###     /###   ##    ###    ####      ### ##         ## ##     #  ##   ####    ###  /###     ######## /###    " << std::endl;
std::cout << "                       ##   ##      ###/ #### / / ###  / ##    ###     ###  / #########       ## ##     #   ##    ###  / ###/ #### / ######## / #### / " << std::endl;
std::cout << "                       ##   ##       ##   ###/ /   ###/  ##     ###     ###/ ##   ####        ## ########   ##     ###/   ##   ###/     ##   ##  ###/  " << std::endl;
std::cout << "                       ##   ##       ##       ##    ##   ##      ##      ##  ##    ##         ## ##     #   ##      ##    ##    ##      ##  ####       " << std::endl;
std::cout << "                       ##   ##       ##       ##    ##   ##      ##      ##  ##    ##         ## ##     ##  ##      ##    ##    ##      ##    ###      " << std::endl;
std::cout << "                        ##  ##       ##       ##    ##   ##      ##      ##  ##    ##         #  ##     ##  ##      ##    ##    ##      ##      ###    " << std::endl;
std::cout << "                         ## #      / ##       ##    ##   ##      ##      ##  ##    ##            /       ## ##      ##    ##    ##      ##        ###  " << std::endl;
std::cout << "                          ###     /  ##       ##    ##   ##      /#      /   ##    /#        /##/        ## ##      /#    ##    ##      ##   /###  ##  " << std::endl;
std::cout << "                           ######/   ###       ######     ######/ ######/     ####/         /  #####      ## ######/ ##   ###   ###     ##  / #### /   " << std::endl;
std::cout << "                             ###      ###       ####       #####   #####       ###         /     ##           #####   ##   ###   ###     ##    ###/    " << std::endl;
std::cout << "                                                                                           #                                                           " << std::endl;
std::cout << "                                                                                            ##                                                         " << std::endl;
std::cout << "                                                                                                                                                       " << std::endl;
std::cout << "                                                                                                                                                       " << std::endl;
std::cout << "                                                                                                                                                       " << std::endl;
std::cout << "                                                        /                         #####                                                                " << std::endl;
std::cout << "                                                      #/                       ######                #                                                 " << std::endl;
std::cout << "                                                #     ##                      /#   /  /    ##       ###                                                " << std::endl;
std::cout << "                                               ##     ##                     /    /  /   #### /      #                                                 " << std::endl;
std::cout << "                                               ##     ##                         /  /     /##/                                                         " << std::endl;
std::cout << "                                             ######## ##  /##      /##          ## ##    / ##      ###   ###  /###     /###                            " << std::endl;
std::cout << "                                            ########  ## / ###    / ###         ## ##   /           ###   ###/ #### / /  ###  /                        " << std::endl;
std::cout << "                                               ##     ##/   ###  /   ###        ## ####/             ##    ##   ###/ /    ###/                         " << std::endl;
std::cout << "                                               ##     ##     ## ##    ###       ## ## ###            ##    ##    ## ##     ##                          " << std::endl;
std::cout << "                                               ##     ##     ## ########        ## ##   ###          ##    ##    ## ##     ##                          " << std::endl;
std::cout << "                                               ##     ##     ## #######         #  ##    ###         ##    ##    ## ##     ##                          " << std::endl;
std::cout << "                                               ##     ##     ## ##                 /       ###       ##    ##    ## ##     ##                          " << std::endl;
std::cout << "                                               ##     ##     ## ####    /      /##/         ###      ##    ##    ## ##     ##                          " << std::endl;
std::cout << "                                               ##     ##     ##  ######/      /  #####        ###  / ### / ###   ### ########                          " << std::endl;
std::cout << "                                                ##     ##    ##   #####      /    ###           ##/   ##/   ###   ###  ### ###                         " << std::endl;
std::cout << "                                                             /               #                                              ###                        " << std::endl;
std::cout << "                                                            /                 ##                                      ####   ###                       " << std::endl;
std::cout << "                                                           /                                                        /######  /#                        " << std::endl;
std::cout << "                                                          /                                                        /     ###/                          " << std::endl;

};

void HuntingKingGame::initMethodSwitcher(int methodIndex) {
    switch (methodIndex) {
    
        case 0:
            printInitGame(3);
            break;
        
        case 1:
            printGamesName();
            break;
    }
}

void HuntingKingGame::seeYouLatter(const char* quitKey) {
    std::cin.clear();
    std::string playerKeyWord;
    std::cin >> playerKeyWord;
    if ( (int) std::tolower(*quitKey) == std::tolower((int) playerKeyWord[0])) {
        std::cout << "You should be tired, better rest a little, see ya" << std::endl;
        exit(1);
    }
}

void HuntingKingGame::printInit() {
    for (int idx = 0; idx < numberOfInimethods; idx++) {
        std::cout << "Press q to quit game or any key to continue" << std::endl;
        seeYouLatter("q");
        initMethodSwitcher(idx);
    }
}

void HuntingKingGame::storyTeller(Dialogs& dialog) {
    std::vector<std::string> textArray = dialog.getTextArray();
    std::map<std::string,int> textCaseSwitcher = Dialogs::getTextFormatSwitcher();

    for (int idx = 0; idx < textArray.size(); idx++) {
        std::cout << "Press q to quit game or any key to continue" << std::endl;
        seeYouLatter("q");
        
        Dialogs::selectCaseForTextBoxes(textArray[idx], textCaseSwitcher);
        ASCImages::imagesSwitcher(idx);
    }
}
